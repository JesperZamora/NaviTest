  // const [tasks, setTasks] = useState([
  //   {
  //     taskId: 1,
  //     title: "Hello world!",
  //     task: "This is the world! This is the world! This is the world! This is the world! This is the world! This is the world! This is the world!",
  //   },
  //   { taskId: 2, title: "Task1", task: "This is the new world!" },
  //   { taskId: 3, title: "Task2", task: "This is the world!!" },
  //   { taskId: 4, title: "Hello", task: "This is the world!" },
  //   { taskId: 5, title: "Hello3", task: "This is the world!2!" },
  //   { taskId: 6, title: "Hello", task: "This is the world!" },
  // ]);

    useEffect(() => {
    if (route.params?.newTask) {
      const newTask = route.params?.newTask
      postTask(newTask);
      // newTask.taskId = (tasks.length + 1); 
      // setTasks((prevTasks) => [...prevTasks, newTask]);
    }
  }, [route.params?.newTask]);

    function deleteTask(id) {
    const newTaskList = tasks.filter((task) => {
      if(task.taskId !== id) {
        return task;
      }
    })
    setTasks(newTaskList);
  }

    useEffect(() => {
    if (route.params?.editTask) {
      const editTask = route.params?.editTask;
      const updatedTasks = tasks.map((task) => {
        if(task.taskId === editTask.taskId) {
          return {
            taskId: editTask.taskId,
            title: editTask.title,
            task: editTask.task
          }
        }
        return task;
      });
    }
  }, [route.params?.editTask]);


  You are initializing Firebase Auth for React Native without providing
AsyncStorage. Auth state will default to memory persistence and will not
persist between sessions. In order to persist auth state, install the package
"@react-native-async-storage/async-storage" and provide it to
initializeAuth:

import { initializeAuth, getReactNativePersistence } from 'firebase/auth';
import ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';
const auth = initializeAuth(app, {
  persistence: getReactNativePersistence(ReactNativeAsyncStorage)
});